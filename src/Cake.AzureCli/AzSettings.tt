<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="Newtonsoft.Json" #>
<#@ assembly name="netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51" #>
<#@ assembly name="$(SolutionDir)\Cake.AzCliCore\bin\Debug\netstandard2.0\Cake.AzCli.Core.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="Newtonsoft.Json" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Cake.AzCli.Core.Models" #>
<#@ import namespace="Cake.AzCli.Core.Helpers" #>
<#@ output extension=".cs" #>
using Cake.Core;
using Cake.Core.Annotations;
using Cake.Core.IO;

namespace Cake.AzureCli
{
    public class AzSettingsBase
    {
        public ProcessArgumentBuilder Arguments { get; set; }
    }

<# 
    var cliProgram = GetAzCliHelpOutputJson();
    var allCliCommands = CommandFinder.GetAllCliCommands(cliProgram);

    PushIndent("    ");
    foreach (var cliCommand in allCliCommands) {
        var commandSettings = NameMaker.MakeCommandSettings(cliCommand);

        WriteLine($"public sealed class {commandSettings} : AzSettingsBase {{");
        PushIndent("    ");
        foreach (var argument in cliCommand.Arguments) {
            var argName = NameMaker.MakeName(argument);
            WriteLine("/// <summary>");
            WriteLine($"/// {argument.Description}");
            WriteLine("/// </summary>");
            WriteLine($"public string {argName} {{ get; set; }}");
            WriteLine("");
        }
        PopIndent();
        WriteLine("}");
        WriteLine("");
    }
    PopIndent();
#>
}

<#+ 
private NameMaker NameMaker = new NameMaker();
private CommandFinder CommandFinder = new CommandFinder();

private CliProgram GetAzCliHelpOutputJson() {
    var templateFile = new FileInfo(Host.TemplateFile);
    var currentFolder = templateFile.Directory.FullName;
    var azCliHelpOutputFileLocation = Path.Combine(currentFolder, "AzCliHelpOutput.json");
    var azCliHelpOutputJson = File.ReadAllText(azCliHelpOutputFileLocation);
    var cliProgram = JsonConvert.DeserializeObject<CliProgram>(azCliHelpOutputJson);
    return cliProgram;
}

#>